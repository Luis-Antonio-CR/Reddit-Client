[{"/Users/luisantonio/Documents/GitHub/Reddit-Client/src/index.js":"1","/Users/luisantonio/Documents/GitHub/Reddit-Client/src/App.js":"2","/Users/luisantonio/Documents/GitHub/Reddit-Client/src/components/NavBar.js":"3","/Users/luisantonio/Documents/GitHub/Reddit-Client/src/components/CategoriesBar.js":"4","/Users/luisantonio/Documents/GitHub/Reddit-Client/src/components/PostComponent.js":"5","/Users/luisantonio/Documents/GitHub/Reddit-Client/src/components/SubredditsBar.js":"6","/Users/luisantonio/Documents/GitHub/Reddit-Client/src/components/SearchBar.js":"7","/Users/luisantonio/Documents/GitHub/Reddit-Client/src/store/store.js":"8","/Users/luisantonio/Documents/GitHub/Reddit-Client/src/store/subRedditSlice.js":"9","/Users/luisantonio/Documents/GitHub/Reddit-Client/src/store/redditSlice.js":"10","/Users/luisantonio/Documents/GitHub/Reddit-Client/src/api/reddit.js":"11","/Users/luisantonio/Documents/GitHub/Reddit-Client/src/components/Home.js":"12"},{"size":370,"mtime":1660834637080,"results":"13","hashOfConfig":"14"},{"size":519,"mtime":1660901395275,"results":"15","hashOfConfig":"14"},{"size":379,"mtime":1654426665856,"results":"16","hashOfConfig":"14"},{"size":435,"mtime":1654278191111,"results":"17","hashOfConfig":"14"},{"size":768,"mtime":1654534913486,"results":"18","hashOfConfig":"14"},{"size":444,"mtime":1654278097191,"results":"19","hashOfConfig":"14"},{"size":1030,"mtime":1660899866696,"results":"20","hashOfConfig":"14"},{"size":265,"mtime":1660834494907,"results":"21","hashOfConfig":"14"},{"size":1173,"mtime":1660834453901,"results":"22","hashOfConfig":"14"},{"size":3565,"mtime":1660898445222,"results":"23","hashOfConfig":"14"},{"size":708,"mtime":1599921792000,"results":"24","hashOfConfig":"14"},{"size":183,"mtime":1660901381149,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"18ord8n",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"29"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"29"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/luisantonio/Documents/GitHub/Reddit-Client/src/index.js",[],[],[],"/Users/luisantonio/Documents/GitHub/Reddit-Client/src/App.js",[],[],"/Users/luisantonio/Documents/GitHub/Reddit-Client/src/components/NavBar.js",["66"],[],"import logo from \"../assets/Reddit_Client_Logo.png\";\nimport SearchBar from \"./SearchBar\";\n\nconst NavBar = () => {\n    return(\n        <div className=\"navbar\" alt=\"\">\n            <div className=\"logo\">\n                <img src={logo}/>\n                <h2>Reddit Client</h2>\n            </div>\n            \n            <SearchBar />\n\n        </div>\n    )\n}\n\nexport default NavBar;","/Users/luisantonio/Documents/GitHub/Reddit-Client/src/components/CategoriesBar.js",[],[],"/Users/luisantonio/Documents/GitHub/Reddit-Client/src/components/PostComponent.js",["67","68","69"],[],"import imgPost from \"../assets/imgPost.jpeg\";\nimport arrow from \"../assets/Arrow.png\";\n\nconst PostComp = () => {\n    return(\n        <div className=\"postComp\">\n            <div className=\"postComp-lateral\">\n                <img src={arrow} className=\"arrow_top\"/>\n                <h3 className=\"lateral_number\">Number</h3>\n                <img src={arrow} className=\"arrow_bottom\"/>\n            </div>\n            <div className=\"postComp-main\">\n                <h2 className=\"medium_text\">Title</h2>\n                <img src={imgPost}/>\n            </div>\n            <div className=\"postComp-baseline\">\n                <h3>Comments</h3>\n                <h3>Time</h3>\n                <h3>Author</h3>\n            </div>\n        </div>\n    )\n}\n\nexport default PostComp;","/Users/luisantonio/Documents/GitHub/Reddit-Client/src/components/SubredditsBar.js",[],[],"/Users/luisantonio/Documents/GitHub/Reddit-Client/src/components/SearchBar.js",["70","71"],[],"import React, {useState, useEffect} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSearchTerm } from \"../store/redditSlice\";\n\nconst SearchBar = () => {\n    const [ searchTermLocal, setSearchTermLocal ] = useState('');\n    const searchTerm = useSelector((state) => state.reddit.searchTerm);\n    const dispatch = useDispatch();\n    \n    const handleSubmit = (e) => {\n\n        e.preventDefault();\n        dispatch(setSearchTerm(searchTermLocal));\n    }\n\n    const handleChange = (e) =>{\n        setSearchTermLocal = e.target.value;\n    }\n\n    useEffect(()=> {\n        setSearchTermLocal(searchTerm);\n    }, [searchTerm]);\n\n    return(\n        <div>\n            <form onSubmit={handleSubmit} className=\"searchBar\">\n                <input type=\"text\" className=\"searchBar-text\" onChange={handleChange} placeholder=\"Search\"/>\n                <button type=\"submit\" onClick={handleSubmit} className=\"searchBar-button\">Search</button>\n            </form>\n        </div>\n    )\n}\n\nexport default SearchBar;","/Users/luisantonio/Documents/GitHub/Reddit-Client/src/store/store.js",[],[],"/Users/luisantonio/Documents/GitHub/Reddit-Client/src/store/subRedditSlice.js",[],[],"/Users/luisantonio/Documents/GitHub/Reddit-Client/src/store/redditSlice.js",[],[],"/Users/luisantonio/Documents/GitHub/Reddit-Client/src/api/reddit.js",[],[],"/Users/luisantonio/Documents/GitHub/Reddit-Client/src/components/Home.js",[],[],{"ruleId":"72","severity":1,"message":"73","line":8,"column":17,"nodeType":"74","endLine":8,"endColumn":34},{"ruleId":"72","severity":1,"message":"73","line":8,"column":17,"nodeType":"74","endLine":8,"endColumn":57},{"ruleId":"72","severity":1,"message":"73","line":10,"column":17,"nodeType":"74","endLine":10,"endColumn":60},{"ruleId":"72","severity":1,"message":"73","line":14,"column":17,"nodeType":"74","endLine":14,"endColumn":37},{"ruleId":"75","severity":1,"message":"76","line":17,"column":9,"nodeType":"77","messageId":"78","endLine":17,"endColumn":27},{"ruleId":"79","severity":1,"message":"80","line":22,"column":8,"nodeType":"81","endLine":22,"endColumn":20,"suggestions":"82"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-const-assign","'setSearchTermLocal' is constant.","Identifier","const","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setSearchTermLocal'. Either include it or remove the dependency array.","ArrayExpression",["83"],{"desc":"84","fix":"85"},"Update the dependencies array to be: [searchTerm, setSearchTermLocal]",{"range":"86","text":"87"},[639,651],"[searchTerm, setSearchTermLocal]"]