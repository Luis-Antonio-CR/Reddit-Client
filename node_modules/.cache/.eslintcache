[{"/Users/luisantonio/Documents/GitHub/Reddit-Client/src/index.js":"1","/Users/luisantonio/Documents/GitHub/Reddit-Client/src/App.js":"2","/Users/luisantonio/Documents/GitHub/Reddit-Client/src/components/NavBar.js":"3","/Users/luisantonio/Documents/GitHub/Reddit-Client/src/components/CategoriesBar.js":"4","/Users/luisantonio/Documents/GitHub/Reddit-Client/src/components/PostComponent.js":"5","/Users/luisantonio/Documents/GitHub/Reddit-Client/src/components/SubredditsBar.js":"6","/Users/luisantonio/Documents/GitHub/Reddit-Client/src/components/SearchBar.js":"7","/Users/luisantonio/Documents/GitHub/Reddit-Client/src/store/store.js":"8","/Users/luisantonio/Documents/GitHub/Reddit-Client/src/store/subRedditSlice.js":"9","/Users/luisantonio/Documents/GitHub/Reddit-Client/src/store/redditSlice.js":"10","/Users/luisantonio/Documents/GitHub/Reddit-Client/src/api/reddit.js":"11","/Users/luisantonio/Documents/GitHub/Reddit-Client/src/components/Home.js":"12","/Users/luisantonio/Documents/GitHub/Reddit-Client/src/utils/shortenNumber.js":"13","/Users/luisantonio/Documents/GitHub/Reddit-Client/src/utils/getRandomNumber.js":"14","/Users/luisantonio/Documents/GitHub/Reddit-Client/src/components/PostLoading.js":"15"},{"size":399,"mtime":1661263952411,"results":"16","hashOfConfig":"17"},{"size":519,"mtime":1661175333928,"results":"18","hashOfConfig":"17"},{"size":379,"mtime":1654426665856,"results":"19","hashOfConfig":"17"},{"size":435,"mtime":1654278191111,"results":"20","hashOfConfig":"17"},{"size":2301,"mtime":1661266087142,"results":"21","hashOfConfig":"17"},{"size":1422,"mtime":1661259769631,"results":"22","hashOfConfig":"17"},{"size":1030,"mtime":1661267088356,"results":"23","hashOfConfig":"17"},{"size":308,"mtime":1661175724806,"results":"24","hashOfConfig":"17"},{"size":1172,"mtime":1661260100694,"results":"25","hashOfConfig":"17"},{"size":3563,"mtime":1661267019490,"results":"26","hashOfConfig":"17"},{"size":707,"mtime":1661264685751,"results":"27","hashOfConfig":"17"},{"size":2127,"mtime":1661267185011,"results":"28","hashOfConfig":"17"},{"size":654,"mtime":1599921792000,"results":"29","hashOfConfig":"17"},{"size":179,"mtime":1599921792000,"results":"30","hashOfConfig":"17"},{"size":1428,"mtime":1661266478292,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18ord8n",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"38"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/luisantonio/Documents/GitHub/Reddit-Client/src/index.js",[],[],"/Users/luisantonio/Documents/GitHub/Reddit-Client/src/App.js",[],[],[],"/Users/luisantonio/Documents/GitHub/Reddit-Client/src/components/NavBar.js",["81"],[],"import logo from \"../assets/Reddit_Client_Logo.png\";\nimport SearchBar from \"./SearchBar\";\n\nconst NavBar = () => {\n    return(\n        <div className=\"navbar\" alt=\"\">\n            <div className=\"logo\">\n                <img src={logo}/>\n                <h2>Reddit Client</h2>\n            </div>\n            \n            <SearchBar />\n\n        </div>\n    )\n}\n\nexport default NavBar;","/Users/luisantonio/Documents/GitHub/Reddit-Client/src/components/CategoriesBar.js",[],[],"/Users/luisantonio/Documents/GitHub/Reddit-Client/src/components/PostComponent.js",["82","83","84","85","86","87","88"],[],"/Users/luisantonio/Documents/GitHub/Reddit-Client/src/components/SubredditsBar.js",["89"],[],"import React, {useEffect} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchSubreddits, selectSubreddits } from \"../store/subRedditSlice\";\nimport { setSelectedSubreddit, selectSelectedSubreddit } from \"../store/redditSlice\";\n\nconst SubredditsBar = () => {\n    const dispatch = useDispatch();\n    const subreddits = useSelector(selectSubreddits);\n    const selectedSubreddit = useSelector(selectSelectedSubreddit);\n    \n    useEffect(()=> {\n        dispatch(fetchSubreddits())\n    }, [dispatch]);\n\n    return(\n        <div className=\"subbredditsBar\">\n            <h2 className=\"medium_text\">Subreddits</h2>\n            <ul>\n                {subreddits.map((subreddit) => {\n                    <li key={subreddit.id} className={`${\n                        selectedSubreddit === subreddit.url && `selected-subreddit`\n                      }`}>\n                        <button onClick={()=> dispatch(setSelectedSubreddit(subreddit.url))}>\n                            <img \n                                src={ subreddit.icon_img }\n                                alt={`${subreddit.display_name}`}\n                                className=\"subreddit_icon\"\n                            />\n                            {subreddit.display_name}\n                        </button>\n                    </li>\n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default SubredditsBar;","/Users/luisantonio/Documents/GitHub/Reddit-Client/src/components/SearchBar.js",[],[],"/Users/luisantonio/Documents/GitHub/Reddit-Client/src/store/store.js",[],[],"/Users/luisantonio/Documents/GitHub/Reddit-Client/src/store/subRedditSlice.js",[],[],"/Users/luisantonio/Documents/GitHub/Reddit-Client/src/store/redditSlice.js",[],[],"/Users/luisantonio/Documents/GitHub/Reddit-Client/src/api/reddit.js",[],[],"/Users/luisantonio/Documents/GitHub/Reddit-Client/src/components/Home.js",["90","91"],[],"/Users/luisantonio/Documents/GitHub/Reddit-Client/src/utils/shortenNumber.js",[],[],"/Users/luisantonio/Documents/GitHub/Reddit-Client/src/utils/getRandomNumber.js",["92"],[],"/**\n * Generates a number between min and max.\n * @param {number} min\n * @param {number} max\n */\nexport default (min, max) => {\n  return Math.floor(Math.random() * max) + min;\n};\n","/Users/luisantonio/Documents/GitHub/Reddit-Client/src/components/PostLoading.js",["93","94"],[],{"ruleId":"95","severity":1,"message":"96","line":8,"column":17,"nodeType":"97","endLine":8,"endColumn":34},{"ruleId":"98","severity":1,"message":"99","line":2,"column":8,"nodeType":"100","messageId":"101","endLine":2,"endColumn":16},{"ruleId":"98","severity":1,"message":"102","line":6,"column":8,"nodeType":"100","messageId":"101","endLine":6,"endColumn":15},{"ruleId":"98","severity":1,"message":"103","line":13,"column":19,"nodeType":"100","messageId":"101","endLine":13,"endColumn":35},{"ruleId":"95","severity":1,"message":"96","line":27,"column":20,"nodeType":"97","endLine":27,"endColumn":65},{"ruleId":"95","severity":1,"message":"96","line":29,"column":20,"nodeType":"97","endLine":29,"endColumn":60},{"ruleId":"95","severity":1,"message":"96","line":35,"column":20,"nodeType":"97","endLine":35,"endColumn":66},{"ruleId":"95","severity":1,"message":"96","line":37,"column":20,"nodeType":"97","endLine":37,"endColumn":63},{"ruleId":"104","severity":1,"message":"105","line":19,"column":45,"nodeType":"106","messageId":"107","endLine":19,"endColumn":47},{"ruleId":"98","severity":1,"message":"108","line":6,"column":8,"nodeType":"100","messageId":"101","endLine":6,"endColumn":23},{"ruleId":"109","severity":1,"message":"110","line":22,"column":8,"nodeType":"111","endLine":22,"endColumn":27,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":6,"column":1,"nodeType":"115","endLine":8,"endColumn":3},{"ruleId":"95","severity":1,"message":"96","line":13,"column":21,"nodeType":"97","endLine":13,"endColumn":61},{"ruleId":"95","severity":1,"message":"96","line":19,"column":21,"nodeType":"97","endLine":19,"endColumn":64},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Skeleton' is defined but never used.","Identifier","unusedVar","'imgPost' is defined but never used.","'onToggleComments' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'getRandomNumber' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["116"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",{"desc":"117","fix":"118"},"Update the dependencies array to be: [dispatch, selectedSubreddit]",{"range":"119","text":"120"},[669,688],"[dispatch, selectedSubreddit]"]