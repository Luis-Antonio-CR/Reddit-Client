[{"/Users/luisantonio/Documents/GitHub/Reddit-Client/src/index.js":"1","/Users/luisantonio/Documents/GitHub/Reddit-Client/src/App.js":"2","/Users/luisantonio/Documents/GitHub/Reddit-Client/src/components/NavBar.js":"3","/Users/luisantonio/Documents/GitHub/Reddit-Client/src/components/CategoriesBar.js":"4","/Users/luisantonio/Documents/GitHub/Reddit-Client/src/components/PostComponent.js":"5","/Users/luisantonio/Documents/GitHub/Reddit-Client/src/components/SubredditsBar.js":"6","/Users/luisantonio/Documents/GitHub/Reddit-Client/src/components/SearchBar.js":"7"},{"size":317,"mtime":1654620632871,"results":"8","hashOfConfig":"9"},{"size":814,"mtime":1654364202056,"results":"10","hashOfConfig":"9"},{"size":379,"mtime":1654426665856,"results":"11","hashOfConfig":"9"},{"size":435,"mtime":1654278191111,"results":"12","hashOfConfig":"9"},{"size":768,"mtime":1654534913486,"results":"13","hashOfConfig":"9"},{"size":444,"mtime":1654278097191,"results":"14","hashOfConfig":"9"},{"size":568,"mtime":1654426314004,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18ord8n",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},"/Users/luisantonio/Documents/GitHub/Reddit-Client/src/index.js",[],[],"/Users/luisantonio/Documents/GitHub/Reddit-Client/src/App.js",[],[],"/Users/luisantonio/Documents/GitHub/Reddit-Client/src/components/NavBar.js",["40"],[],"import logo from \"../assets/Reddit_Client_Logo.png\";\nimport SearchBar from \"./SearchBar\";\n\nconst NavBar = () => {\n    return(\n        <div className=\"navbar\" alt=\"\">\n            <div className=\"logo\">\n                <img src={logo}/>\n                <h2>Reddit Client</h2>\n            </div>\n            \n            <SearchBar />\n\n        </div>\n    )\n}\n\nexport default NavBar;","/Users/luisantonio/Documents/GitHub/Reddit-Client/src/components/CategoriesBar.js",[],[],"/Users/luisantonio/Documents/GitHub/Reddit-Client/src/components/PostComponent.js",["41","42","43"],[],"import imgPost from \"../assets/imgPost.jpeg\";\nimport arrow from \"../assets/Arrow.png\";\n\nconst PostComp = () => {\n    return(\n        <div className=\"postComp\">\n            <div className=\"postComp-lateral\">\n                <img src={arrow} className=\"arrow_top\"/>\n                <h3 className=\"lateral_number\">Number</h3>\n                <img src={arrow} className=\"arrow_bottom\"/>\n            </div>\n            <div className=\"postComp-main\">\n                <h2 className=\"medium_text\">Title</h2>\n                <img src={imgPost}/>\n            </div>\n            <div className=\"postComp-baseline\">\n                <h3>Comments</h3>\n                <h3>Time</h3>\n                <h3>Author</h3>\n            </div>\n        </div>\n    )\n}\n\nexport default PostComp;","/Users/luisantonio/Documents/GitHub/Reddit-Client/src/components/SubredditsBar.js",[],[],"/Users/luisantonio/Documents/GitHub/Reddit-Client/src/components/SearchBar.js",["44"],[],"import { useSearchParams, createSearchParams } from \"react-router-dom\";\n\nconst SearchBar = () => {\n    const [ searchParams, setSearchParams ] = useSearchParams();\n    \n    const handleSubmit = (e) => {\n\n        const title = e.target.value;\n\n        setSearchParams(createSearchParams({ title : title }));\n        \n    }\n\n    return(\n        <div>\n            <form onChange={handleSubmit} className=\"searchBar\">\n                <input type=\"text\" className=\"searchBar-text\" placeholder=\"Search\"/>\n            </form>\n        </div>\n    )\n}\n\nexport default SearchBar;",{"ruleId":"45","severity":1,"message":"46","line":8,"column":17,"nodeType":"47","endLine":8,"endColumn":34},{"ruleId":"45","severity":1,"message":"46","line":8,"column":17,"nodeType":"47","endLine":8,"endColumn":57},{"ruleId":"45","severity":1,"message":"46","line":10,"column":17,"nodeType":"47","endLine":10,"endColumn":60},{"ruleId":"45","severity":1,"message":"46","line":14,"column":17,"nodeType":"47","endLine":14,"endColumn":37},{"ruleId":"48","severity":1,"message":"49","line":4,"column":13,"nodeType":"50","messageId":"51","endLine":4,"endColumn":25},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'searchParams' is assigned a value but never used.","Identifier","unusedVar"]